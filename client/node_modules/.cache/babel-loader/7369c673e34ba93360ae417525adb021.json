{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST } from './types'; // Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Remove like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    console.log(`ðŸ˜“ `, id);\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/di-shiro/Documents/react_study/Brad-Traversy/okinawaDevConnector/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","getPosts","dispatch","res","get","type","payload","data","err","console","error","msg","response","statusText","status","addLike","id","put","likes","removeLike","log","deletePost","delete","addPost","formData","config","headers","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n} from './types';\n\n// Get posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add like\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    console.log(`ðŸ˜“ `, id);\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/`, formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}