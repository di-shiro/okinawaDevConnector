{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES } from './types'; // Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Remove like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/unposts/like/${id}`);\n    console.log(`ðŸ˜“ `, res);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/di-shiro/Documents/react_study/Brad-Traversy/okinawaDevConnector/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","getPosts","dispatch","res","get","type","payload","data","err","console","error","msg","response","statusText","status","addLike","id","likes","removeLike","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,YAAhC,QAAoD,SAApD,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,YAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,SADC;AAEPQ,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAe,KAAf,EAAqBF,GAArB;AACAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,UADC;AAEPO,MAAAA,OAAO,EAAE;AACPK,QAAAA,GAAG,EAAEH,GAAG,CAACI,QAAJ,CAAaC,UADX;AAEPC,QAAAA,MAAM,EAAEN,GAAG,CAACI,QAAJ,CAAaE;AAFd;AAFF,KAAD,CAAR;AAOD;AACF,CAlBM,C,CAoBP;;AACA,OAAO,MAAMC,OAAO,GAAIC,EAAD,IAAQ,MAAOd,QAAP,IAAoB;AACjD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,mBAAkBY,EAAG,EAAhC,CAAlB;AAEAd,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEL,YADC;AAEPM,MAAAA,OAAO,EAAE;AAAEU,QAAAA,EAAF;AAAMC,QAAAA,KAAK,EAAEd,GAAG,CAACI;AAAjB;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAe,KAAf,EAAqBF,GAArB;AACAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,UADC;AAEPO,MAAAA,OAAO,EAAE;AACPK,QAAAA,GAAG,EAAEH,GAAG,CAACI,QAAJ,CAAaC,UADX;AAEPC,QAAAA,MAAM,EAAEN,GAAG,CAACI,QAAJ,CAAaE;AAFd;AAFF,KAAD,CAAR;AAOD;AACF,CAlBM,C,CAoBP;;AACA,OAAO,MAAMI,UAAU,GAAIF,EAAD,IAAQ,MAAOd,QAAP,IAAoB;AACpD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,qBAAoBY,EAAG,EAAlC,CAAlB;AACAP,IAAAA,OAAO,CAACU,GAAR,CAAa,KAAb,EAAmBhB,GAAnB;AAEAD,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEL,YADC;AAEPM,MAAAA,OAAO,EAAE;AAAEU,QAAAA,EAAF;AAAMC,QAAAA,KAAK,EAAEd,GAAG,CAACI;AAAjB;AAFF,KAAD,CAAR;AAID,GARD,CAQE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAe,KAAf,EAAqBF,GAArB;AACAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,UADC;AAEPO,MAAAA,OAAO,EAAE;AACPK,QAAAA,GAAG,EAAEH,GAAG,CAACI,QAAJ,CAAaC,UADX;AAEPC,QAAAA,MAAM,EAAEN,GAAG,CAACI,QAAJ,CAAaE;AAFd;AAFF,KAAD,CAAR;AAOD;AACF,CAnBM","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES } from './types';\n\n// Get posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add like\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/unposts/like/${id}`);\n    console.log(`ðŸ˜“ `, res);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    console.error(`ðŸ˜“ `, err);\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}